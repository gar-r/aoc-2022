package main

import (
	"strconv"
	"strings"
)

func parse(data []string) []Instruction {
	res := make([]Instruction, len(data))
	for i, d := range data {
		res[i] = parseInstruction(d)
	}
	return res
}

func parseInstruction(s string) Instruction {
	if s == "Noop" {
		return &Noop{}
	}
	if strings.HasPrefix(s, "addx ") {
		p := strings.TrimLeft(s, "addx ")
		val, _ := strconv.Atoi(p)
		return &Addx{Value: val}
	}
	panic(s)
}

var input = []string{
	"addx 2",
	"addx 3",
	"addx 1",
	"Noop",
	"addx 4",
	"Noop",
	"Noop",
	"Noop",
	"addx 5",
	"Noop",
	"addx 1",
	"addx 4",
	"addx -2",
	"addx 3",
	"addx 5",
	"addx -1",
	"addx 5",
	"addx 3",
	"addx -2",
	"addx 4",
	"Noop",
	"Noop",
	"Noop",
	"addx -27",
	"addx -5",
	"addx 2",
	"addx -7",
	"addx 3",
	"addx 7",
	"addx 5",
	"addx 2",
	"addx 5",
	"Noop",
	"Noop",
	"addx -2",
	"Noop",
	"addx 3",
	"addx 2",
	"addx 5",
	"addx 2",
	"addx 3",
	"Noop",
	"addx 2",
	"addx -29",
	"addx 30",
	"addx -26",
	"addx -10",
	"Noop",
	"addx 5",
	"Noop",
	"addx 18",
	"addx -13",
	"Noop",
	"Noop",
	"addx 5",
	"Noop",
	"Noop",
	"addx 5",
	"Noop",
	"Noop",
	"Noop",
	"addx 1",
	"addx 2",
	"addx 7",
	"Noop",
	"Noop",
	"addx 3",
	"Noop",
	"addx 2",
	"addx 3",
	"Noop",
	"addx -37",
	"Noop",
	"addx 16",
	"addx -12",
	"addx 29",
	"addx -16",
	"addx -10",
	"addx 5",
	"addx 2",
	"addx -11",
	"addx 11",
	"addx 3",
	"addx 5",
	"addx 2",
	"addx 2",
	"addx -1",
	"addx 2",
	"addx 5",
	"addx 2",
	"Noop",
	"Noop",
	"Noop",
	"addx -37",
	"Noop",
	"addx 17",
	"addx -10",
	"addx -2",
	"Noop",
	"addx 7",
	"addx 3",
	"Noop",
	"addx 2",
	"addx -10",
	"addx 22",
	"addx -9",
	"addx 5",
	"addx 2",
	"addx -5",
	"addx 6",
	"addx 2",
	"addx 5",
	"addx 2",
	"addx -28",
	"addx -7",
	"Noop",
	"Noop",
	"addx 1",
	"addx 4",
	"addx 17",
	"addx -12",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
	"addx 5",
	"addx 6",
	"Noop",
	"addx -1",
	"addx -17",
	"addx 18",
	"Noop",
	"addx 5",
	"Noop",
	"Noop",
	"Noop",
	"addx 5",
	"addx 4",
	"addx -2",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
}

var example = []string{
	"addx 15",
	"addx -11",
	"addx 6",
	"addx -3",
	"addx 5",
	"addx -1",
	"addx -8",
	"addx 13",
	"addx 4",
	"Noop",
	"addx -1",
	"addx 5",
	"addx -1",
	"addx 5",
	"addx -1",
	"addx 5",
	"addx -1",
	"addx 5",
	"addx -1",
	"addx -35",
	"addx 1",
	"addx 24",
	"addx -19",
	"addx 1",
	"addx 16",
	"addx -11",
	"Noop",
	"Noop",
	"addx 21",
	"addx -15",
	"Noop",
	"Noop",
	"addx -3",
	"addx 9",
	"addx 1",
	"addx -3",
	"addx 8",
	"addx 1",
	"addx 5",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
	"addx -36",
	"Noop",
	"addx 1",
	"addx 7",
	"Noop",
	"Noop",
	"Noop",
	"addx 2",
	"addx 6",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
	"Noop",
	"addx 1",
	"Noop",
	"Noop",
	"addx 7",
	"addx 1",
	"Noop",
	"addx -13",
	"addx 13",
	"addx 7",
	"Noop",
	"addx 1",
	"addx -33",
	"Noop",
	"Noop",
	"Noop",
	"addx 2",
	"Noop",
	"Noop",
	"Noop",
	"addx 8",
	"Noop",
	"addx -1",
	"addx 2",
	"addx 1",
	"Noop",
	"addx 17",
	"addx -9",
	"addx 1",
	"addx 1",
	"addx -3",
	"addx 11",
	"Noop",
	"Noop",
	"addx 1",
	"Noop",
	"addx 1",
	"Noop",
	"Noop",
	"addx -13",
	"addx -19",
	"addx 1",
	"addx 3",
	"addx 26",
	"addx -30",
	"addx 12",
	"addx -1",
	"addx 3",
	"addx 1",
	"Noop",
	"Noop",
	"Noop",
	"addx -9",
	"addx 18",
	"addx 1",
	"addx 2",
	"Noop",
	"Noop",
	"addx 9",
	"Noop",
	"Noop",
	"Noop",
	"addx -1",
	"addx 2",
	"addx -37",
	"addx 1",
	"addx 3",
	"Noop",
	"addx 15",
	"addx -21",
	"addx 22",
	"addx -6",
	"addx 1",
	"Noop",
	"addx 2",
	"addx 1",
	"Noop",
	"addx -10",
	"Noop",
	"Noop",
	"addx 20",
	"addx 1",
	"addx 2",
	"addx 2",
	"addx -6",
	"addx -11",
	"Noop",
	"Noop",
	"Noop",
}
